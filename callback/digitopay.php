<?php header('Content-Type:<?php application/json');<?php 
header("Access-Control-Allow-Origin:<?php *");<?php 
header("Access-Control-Allow-Methods:<?php POST,<?php OPTIONS");<?php 
header("Access-Control-Allow-Headers:<?php Content-Type");<?php //<?php CONFIGURAÇÃO DE LOGS -<?php ALTERE AQUI PARA ATIVAR/DESATIVAR define('DEBUG_MODE',<?php false);<?php //<?php true =<?php logs ativos |<?php false =<?php logs desativados define('LOG_FILE',<?php 'logs_digitopay.txt');<?php //<?php Função para gravar logs apenas se DEBUG_MODE estiver ativo function writeLog($message)<?php {<?php if (DEBUG_MODE)<?php {<?php file_put_contents(LOG_FILE,<?php date('d/m/Y H:i:s')<?php .<?php "<?php -<?php "<?php .<?php $message .<?php PHP_EOL,<?php FILE_APPEND);<?php }<?php 
}<?php if ($_SERVER['REQUEST_METHOD']<?php ===<?php 'OPTIONS')<?php {<?php http_response_code(200);<?php exit;<?php 
}<?php if ($_SERVER['REQUEST_METHOD']<?php !==<?php 'POST')<?php {<?php http_response_code(405);<?php echo json_encode(['error'<?php =><?php 'Método não permitido']);<?php exit;<?php 
}<?php try {<?php require_once __DIR__ .<?php '/../conexao.php';<?php <?php //<?php Receber dados do webhook <?php $input =<?php file_get_contents('php://input');<?php $data =<?php json_decode($input,<?php true);<?php <?php writeLog("PAYLOAD DIGITOPAY:<?php "<?php .<?php print_r($data,<?php true));<?php writeLog("----------------------------------------------------------");<?php <?php if (!$data)<?php {<?php throw new Exception('Dados inválidos recebidos');<?php }<?php <?php //<?php Verificar se possui os campos necessários <?php if (!isset($data['id'])<?php ||<?php !isset($data['status']))<?php {<?php throw new Exception('Campos obrigatórios não encontrados');<?php }<?php <?php $transactionId =<?php $data['id'];<?php $status =<?php strtoupper($data['status']);<?php $idempotencyKey =<?php $data['idempotencyKey']<?php ??<?php null;<?php <?php //<?php Mapear status da DigitoPay para o sistema <?php $statusMap =<?php [<?php 'REALIZADO'<?php =><?php 'PAID',<?php 'CANCELADO'<?php =><?php 'CANCELLED',<?php 'EXPIRADO'<?php =><?php 'CANCELLED',<?php 'PENDENTE'<?php =><?php 'PENDING',<?php 'EM PROCESSAMENTO'<?php =><?php 'PENDING',<?php 'ANALISE'<?php =><?php 'PENDING',<?php 'ERRO'<?php =><?php 'FAILED'<?php ];<?php <?php $newStatus =<?php $statusMap[$status]<?php ??<?php 'PENDING';<?php <?php writeLog("INICIANDO PROCESSO PARA TXN:<?php "<?php .<?php $transactionId .<?php "<?php |<?php STATUS:<?php "<?php .<?php $newStatus);<?php <?php //<?php Buscar a transação no banco <?php $stmt =<?php $pdo->prepare("<?php SELECT id,<?php user_id,<?php valor,<?php status,<?php gateway <?php FROM depositos <?php WHERE transactionId =<?php :transactionId <?php OR idempotency_key =<?php :idempotencyKey <?php LIMIT 1 <?php ");<?php <?php $stmt->execute([<?php ':transactionId'<?php =><?php $transactionId,<?php ':idempotencyKey'<?php =><?php $idempotencyKey <?php ]);<?php <?php $deposito =<?php $stmt->fetch();<?php <?php if (!$deposito)<?php {<?php //<?php Se não encontrou por transactionId ou idempotencyKey,<?php tentar buscar apenas por transactionId <?php $stmt =<?php $pdo->prepare("<?php SELECT id,<?php user_id,<?php valor,<?php status,<?php gateway <?php FROM depositos <?php WHERE transactionId =<?php :transactionId <?php LIMIT 1 <?php ");<?php <?php $stmt->execute([':transactionId'<?php =><?php $transactionId]);<?php $deposito =<?php $stmt->fetch();<?php <?php if (!$deposito)<?php {<?php writeLog("ERRO:<?php Depósito não encontrado para TXN:<?php "<?php .<?php $transactionId);<?php throw new Exception('Transação não encontrada:<?php '<?php .<?php $transactionId);<?php }<?php }<?php <?php writeLog("DEPÓSITO ENCONTRADO:<?php "<?php .<?php print_r($deposito,<?php true));<?php <?php //<?php Verificar se é<?php gateway DigitoPay <?php if ($deposito['gateway']<?php !==<?php 'digitopay')<?php {<?php throw new Exception('Gateway incorreto para esta transação');<?php }<?php <?php //<?php Se o status já<?php foi processado,<?php retornar sucesso <?php if ($deposito['status']<?php ===<?php $newStatus)<?php {<?php echo json_encode(['status'<?php =><?php 'success',<?php 'message'<?php =><?php 'Status já<?php processado']);<?php exit;<?php }<?php <?php //<?php Se a transação foi aprovada,<?php processar com lógica completa incluindo CPA <?php if ($newStatus ===<?php 'PAID')<?php {<?php //<?php Verificar se o valor já<?php não foi creditado <?php $stmt =<?php $pdo->prepare("<?php SELECT COUNT(*)<?php as count <?php FROM transacoes <?php WHERE tipo =<?php 'DEPOSIT'<?php AND referencia =<?php :transactionId <?php AND status =<?php 'COMPLETED'<?php ");<?php <?php $stmt->execute([':transactionId'<?php =><?php $transactionId]);<?php $jaProcessado =<?php $stmt->fetchColumn();<?php <?php if ($jaProcessado ==<?php 0)<?php {<?php try {<?php $pdo->beginTransaction();<?php <?php //<?php Atualizar status da transação <?php $stmt =<?php $pdo->prepare("<?php UPDATE depositos <?php SET status =<?php :status,<?php updated_at =<?php NOW(),<?php webhook_data =<?php :webhook_data <?php WHERE id =<?php :id <?php ");<?php <?php $result =<?php $stmt->execute([<?php ':status'<?php =><?php $newStatus,<?php ':webhook_data'<?php =><?php $input,<?php ':id'<?php =><?php $deposito['id']<?php ]);<?php <?php if (!$result)<?php {<?php throw new Exception('Erro ao atualizar status da transação');<?php }<?php <?php writeLog("DEPÓSITO ATUALIZADO PARA PAID");<?php <?php //<?php Buscar saldo atual do usuário <?php $stmt =<?php $pdo->prepare("SELECT saldo FROM usuarios WHERE id =<?php :user_id");<?php $stmt->execute([':user_id'<?php =><?php $deposito['user_id']]);<?php $saldoAtual =<?php $stmt->fetchColumn();<?php <?php if ($saldoAtual ===<?php false)<?php {<?php throw new Exception('Usuário não encontrado');<?php }<?php <?php //<?php Atualizar saldo do usuário <?php $novoSaldo =<?php $saldoAtual +<?php $deposito['valor'];<?php $stmt =<?php $pdo->prepare("<?php UPDATE usuarios <?php SET saldo =<?php :novo_saldo <?php WHERE id =<?php :user_id <?php ");<?php <?php $stmt->execute([<?php ':novo_saldo'<?php =><?php $novoSaldo,<?php ':user_id'<?php =><?php $deposito['user_id']<?php ]);<?php <?php writeLog("SALDO CREDITADO:<?php R$<?php "<?php .<?php $deposito['valor']<?php .<?php "<?php para usuário "<?php .<?php $deposito['user_id']);<?php <?php //<?php Registrar a transação <?php $stmt =<?php $pdo->prepare("<?php INSERT INTO transacoes (<?php user_id,<?php tipo,<?php valor,<?php saldo_anterior,<?php saldo_posterior,<?php status,<?php referencia,<?php gateway,<?php descricao,<?php created_at <?php )<?php VALUES (<?php :user_id,<?php 'DEPOSIT',<?php :valor,<?php :saldo_anterior,<?php :saldo_posterior,<?php 'COMPLETED',<?php :referencia,<?php 'digitopay',<?php :descricao,<?php NOW()<?php )<?php ");<?php <?php $stmt->execute([<?php ':user_id'<?php =><?php $deposito['user_id'],<?php ':valor'<?php =><?php $deposito['valor'],<?php ':saldo_anterior'<?php =><?php $saldoAtual,<?php ':saldo_posterior'<?php =><?php $novoSaldo,<?php ':referencia'<?php =><?php $transactionId,<?php ':descricao'<?php =><?php 'Depósito via DigitoPay -<?php '<?php .<?php $transactionId <?php ]);<?php <?php //<?php VERIFICAÇÃO PARA CPA (APENAS PRIMEIRO DEPÓSITO)<?php $stmt =<?php $pdo->prepare("SELECT indicacao FROM usuarios WHERE id =<?php :uid");<?php $stmt->execute([':uid'<?php =><?php $deposito['user_id']]);<?php $usuario =<?php $stmt->fetch();<?php <?php writeLog("USUÁRIO DATA:<?php "<?php .<?php print_r($usuario,<?php true));<?php <?php if ($usuario &&<?php !empty($usuario['indicacao']))<?php {<?php writeLog("USUÁRIO TEM INDICAÇÃO:<?php "<?php .<?php $usuario['indicacao']);<?php <?php //<?php Verifica se este usuário JÁ<?php teve algum depósito aprovado anteriormente <?php $stmt =<?php $pdo->prepare("SELECT COUNT(*)<?php as total_pagos FROM depositos WHERE user_id =<?php :uid AND status =<?php 'PAID'<?php AND id !=<?php :current_id");<?php $stmt->execute([<?php ':uid'<?php =><?php $deposito['user_id'],<?php ':current_id'<?php =><?php $deposito['id']<?php ]);<?php $depositosAnteriores =<?php $stmt->fetch();<?php <?php writeLog("DEPÓSITOS ANTERIORES PAGOS:<?php "<?php .<?php $depositosAnteriores['total_pagos']);<?php <?php //<?php CPA só<?php é<?php pago se este for o PRIMEIRO depósito aprovado do usuário <?php if ($depositosAnteriores['total_pagos']<?php ==<?php 0)<?php {<?php writeLog("É<?php O PRIMEIRO DEPÓSITO,<?php VERIFICANDO AFILIADO");<?php <?php $stmt =<?php $pdo->prepare("SELECT id,<?php comissao_cpa,<?php banido FROM usuarios WHERE id =<?php :afiliado_id");<?php $stmt->execute([':afiliado_id'<?php =><?php $usuario['indicacao']]);<?php $afiliado =<?php $stmt->fetch();<?php <?php writeLog("AFILIADO DATA:<?php "<?php .<?php print_r($afiliado,<?php true));<?php <?php if ($afiliado &&<?php $afiliado['banido']<?php !=<?php 1 &&<?php !empty($afiliado['comissao_cpa']))<?php {<?php $comissao =<?php $afiliado['comissao_cpa'];<?php <?php //<?php Credita a comissão CPA para o afiliado <?php $stmt =<?php $pdo->prepare("UPDATE usuarios SET saldo =<?php saldo +<?php :comissao WHERE id =<?php :afiliado_id");<?php $stmt->execute([<?php ':comissao'<?php =><?php $comissao,<?php ':afiliado_id'<?php =><?php $afiliado['id']<?php ]);<?php <?php //<?php Tenta inserir na tabela transacoes_afiliados <?php try {<?php $stmt =<?php $pdo->prepare("INSERT INTO transacoes_afiliados <?php (afiliado_id,<?php usuario_id,<?php deposito_id,<?php valor,<?php created_at)<?php VALUES (:afiliado_id,<?php :usuario_id,<?php :deposito_id,<?php :valor,<?php NOW())");<?php $stmt->execute([<?php ':afiliado_id'<?php =><?php $afiliado['id'],<?php ':usuario_id'<?php =><?php $deposito['user_id'],<?php ':deposito_id'<?php =><?php $deposito['id'],<?php ':valor'<?php =><?php $comissao <?php ]);<?php }<?php catch (Exception $insertError)<?php {<?php writeLog("ERRO AO INSERIR TRANSAÇÃO AFILIADO:<?php "<?php .<?php $insertError->getMessage());<?php }<?php <?php writeLog("CPA PAGO:<?php Afiliado {$afiliado['id']}<?php recebeu R$<?php {$comissao}<?php pelo primeiro depósito do usuário {$deposito['user_id']}");<?php }<?php else {<?php writeLog("CPA NÃO PAGO:<?php Afiliado inválido ou sem comissão");<?php }<?php }<?php else {<?php writeLog("CPA NÃO PAGO:<?php Usuário {$deposito['user_id']}<?php já<?php teve {$depositosAnteriores['total_pagos']}<?php depósito(s)<?php pago(s)<?php anteriormente");<?php }<?php }<?php else {<?php writeLog("USUÁRIO SEM INDICAÇÃO");<?php }<?php <?php $pdo->commit();<?php writeLog("TRANSAÇÃO FINALIZADA COM SUCESSO");<?php <?php }<?php catch (Exception $e)<?php {<?php $pdo->rollback();<?php writeLog("ERRO GERAL:<?php "<?php .<?php $e->getMessage());<?php writeLog("STACK TRACE:<?php "<?php .<?php $e->getTraceAsString());<?php throw new Exception('Erro ao processar aprovação:<?php '<?php .<?php $e->getMessage());<?php }<?php }<?php else {<?php writeLog("TRANSAÇÃO JÁ<?php PROCESSADA ANTERIORMENTE");<?php }<?php }<?php else {<?php //<?php Para outros status que não são APPROVED,<?php apenas atualizar o status <?php $stmt =<?php $pdo->prepare("<?php UPDATE depositos <?php SET status =<?php :status,<?php updated_at =<?php NOW(),<?php webhook_data =<?php :webhook_data <?php WHERE id =<?php :id <?php ");<?php <?php $result =<?php $stmt->execute([<?php ':status'<?php =><?php $newStatus,<?php ':webhook_data'<?php =><?php $input,<?php ':id'<?php =><?php $deposito['id']<?php ]);<?php <?php if (!$result)<?php {<?php throw new Exception('Erro ao atualizar status da transação');<?php }<?php <?php writeLog("STATUS ATUALIZADO PARA:<?php "<?php .<?php $newStatus);<?php }<?php <?php //<?php Resposta de sucesso <?php echo json_encode([<?php 'status'<?php =><?php 'success',<?php 'message'<?php =><?php 'Webhook processado com sucesso',<?php 'transaction_id'<?php =><?php $transactionId,<?php 'new_status'<?php =><?php $newStatus <?php ]);<?php }<?php catch (Exception $e)<?php {<?php writeLog("ERRO GERAL:<?php "<?php .<?php $e->getMessage());<?php http_response_code(400);<?php echo json_encode([<?php 'status'<?php =><?php 'error',<?php 'message'<?php =><?php $e->getMessage()<?php ]);<?php 
}