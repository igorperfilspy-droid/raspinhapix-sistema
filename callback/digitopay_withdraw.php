<?php /**<?php *<?php DigitoPay Withdraw Webhook -<?php Versão Final <?php *<?php callback/digitopay_withdraw.php <?php *<?php *<?php Este webhook recebe notificações da DigitoPay sobre o status dos saques <?php *<?php e atualiza automaticamente o status no banco de dados <?php */<?php header('Content-Type:<?php application/json');<?php //<?php Log detalhado para debug (opcional -<?php remover em produção se não precisar)<?php 
$enableDebugLog =<?php true;<?php 
$logFile =<?php __DIR__ .<?php '/../logs/digitopay_webhook.log';<?php function writeLog($message)<?php {<?php global $logFile,<?php $enableDebugLog;<?php if (!$enableDebugLog)<?php return;<?php <?php if (!is_dir(dirname($logFile)))<?php {<?php mkdir(dirname($logFile),<?php 0755,<?php true);<?php }<?php <?php $timestamp =<?php date('Y-m-d H:i:s');<?php file_put_contents($logFile,<?php "[$timestamp]<?php $message\n",<?php FILE_APPEND);<?php 
}<?php //<?php Log do acesso writeLog("===<?php WEBHOOK ACCESSED ===");<?php 
writeLog("Method:<?php "<?php .<?php $_SERVER['REQUEST_METHOD']);<?php 
writeLog("User-Agent:<?php "<?php .<?php ($_SERVER['HTTP_USER_AGENT']<?php ??<?php 'Unknown'));<?php 
writeLog("Raw Input:<?php "<?php .<?php file_get_contents('php://input'));<?php //<?php Verificar método HTTP if ($_SERVER['REQUEST_METHOD']<?php !==<?php 'POST')<?php {<?php http_response_code(405);<?php $response =<?php ['error'<?php =><?php 'Método não permitido',<?php 'allowed'<?php =><?php 'POST'];<?php writeLog("ERROR:<?php Método inválido -<?php "<?php .<?php $_SERVER['REQUEST_METHOD']);<?php echo json_encode($response);<?php exit;<?php 
}<?php try {<?php require_once __DIR__ .<?php '/../conexao.php';<?php <?php //<?php Receber e validar dados do webhook <?php $input =<?php file_get_contents('php://input');<?php $data =<?php json_decode($input,<?php true);<?php <?php writeLog("Parsed webhook data:<?php "<?php .<?php json_encode($data));<?php <?php if (!$data)<?php {<?php throw new Exception('Dados JSON inválidos recebidos');<?php }<?php <?php //<?php Verificar campos obrigatórios <?php if (!isset($data['id'])<?php ||<?php !isset($data['status']))<?php {<?php throw new Exception('Campos obrigatórios não encontrados (id,<?php status)');<?php }<?php <?php $transactionId =<?php $data['id'];<?php $status =<?php strtoupper(trim($data['status']));<?php $idempotencyKey =<?php $data['idempotencyKey']<?php ??<?php null;<?php <?php writeLog("Processing -<?php Transaction ID:<?php $transactionId,<?php Status:<?php $status,<?php Idempotency:<?php $idempotencyKey");<?php <?php //<?php Mapeamento completo de status DigitoPay para sistema interno <?php $statusMap =<?php [<?php 'REALIZADO'<?php =><?php 'PAID',<?php 'CANCELADO'<?php =><?php 'CANCELLED',<?php 'ERRO'<?php =><?php 'FAILED',<?php 'PENDENTE'<?php =><?php 'PENDING',<?php 'EM PROCESSAMENTO'<?php =><?php 'PROCESSING',<?php 'ANALISE'<?php =><?php 'PROCESSING',<?php 'APPROVED'<?php =><?php 'PAID',<?php 'REJECTED'<?php =><?php 'CANCELLED',<?php 'COMPLETED'<?php =><?php 'PAID',<?php 'FAILED'<?php =><?php 'FAILED',<?php 'PROCESSING'<?php =><?php 'PROCESSING',<?php 'SUCCESS'<?php =><?php 'PAID',<?php 'CONFIRMED'<?php =><?php 'PAID'<?php ];<?php <?php $newStatus =<?php $statusMap[$status]<?php ??<?php 'PROCESSING';<?php writeLog("Status mapping:<?php $status -><?php $newStatus");<?php <?php //<?php Buscar o saque no banco usando múltiplos critérios <?php $saque =<?php null;<?php $searchMethod =<?php '';<?php <?php //<?php 1.<?php Buscar por transaction_id_digitopay (mais confiável)<?php if ($transactionId)<?php {<?php $stmt =<?php $pdo->prepare("<?php SELECT id,<?php user_id,<?php valor,<?php status,<?php gateway <?php FROM saques <?php WHERE transaction_id_digitopay =<?php :transaction_id <?php AND gateway =<?php 'digitopay'<?php LIMIT 1 <?php ");<?php $stmt->execute([':transaction_id'<?php =><?php $transactionId]);<?php $saque =<?php $stmt->fetch();<?php if ($saque)<?php $searchMethod =<?php 'transaction_id_digitopay';<?php }<?php <?php //<?php 2.<?php Buscar por idempotency_key se não encontrou <?php if (!$saque &&<?php $idempotencyKey)<?php {<?php $stmt =<?php $pdo->prepare("<?php SELECT id,<?php user_id,<?php valor,<?php status,<?php gateway <?php FROM saques <?php WHERE digitopay_idempotency_key =<?php :idempotency_key <?php AND gateway =<?php 'digitopay'<?php LIMIT 1 <?php ");<?php $stmt->execute([':idempotency_key'<?php =><?php $idempotencyKey]);<?php $saque =<?php $stmt->fetch();<?php if ($saque)<?php $searchMethod =<?php 'idempotency_key';<?php }<?php <?php //<?php 3.<?php Último recurso:<?php saque mais recente em processamento (últimas 2 horas)<?php if (!$saque)<?php {<?php $stmt =<?php $pdo->prepare("<?php SELECT id,<?php user_id,<?php valor,<?php status,<?php gateway <?php FROM saques <?php WHERE gateway =<?php 'digitopay'<?php AND status IN ('PROCESSING',<?php 'EM PROCESSAMENTO',<?php 'PENDING')<?php AND created_at >=<?php DATE_SUB(NOW(),<?php INTERVAL 2 HOUR)<?php ORDER BY updated_at DESC <?php LIMIT 1 <?php ");<?php $stmt->execute();<?php $saque =<?php $stmt->fetch();<?php if ($saque)<?php $searchMethod =<?php 'recent_processing';<?php }<?php <?php writeLog("Search result:<?php "<?php .<?php ($saque ?<?php "Found via $searchMethod"<?php :<?php "Not found"));<?php writeLog("Saque data:<?php "<?php .<?php json_encode($saque));<?php <?php if (!$saque)<?php {<?php $error =<?php "Saque não encontrado para transactionId:<?php $transactionId";<?php writeLog("ERROR:<?php $error");<?php <?php //<?php Retornar sucesso mesmo assim para evitar reenvios desnecessários <?php echo json_encode([<?php 'status'<?php =><?php 'success',<?php 'message'<?php =><?php 'Webhook recebido mas saque não encontrado',<?php 'transaction_id'<?php =><?php $transactionId <?php ]);<?php exit;<?php }<?php <?php //<?php Verificar se já<?php está<?php no status final <?php if ($saque['status']<?php ===<?php $newStatus)<?php {<?php writeLog("Status já<?php atualizado:<?php {$saque['status']}");<?php echo json_encode([<?php 'status'<?php =><?php 'success',<?php 'message'<?php =><?php 'Status já<?php processado',<?php 'saque_id'<?php =><?php $saque['id'],<?php 'current_status'<?php =><?php $saque['status']<?php ]);<?php exit;<?php }<?php <?php //<?php Iniciar transação para atualização <?php $pdo->beginTransaction();<?php <?php try {<?php //<?php Atualizar status do saque <?php $stmt =<?php $pdo->prepare("<?php UPDATE saques <?php SET status =<?php :status,<?php transaction_id_digitopay =<?php COALESCE(transaction_id_digitopay,<?php :transaction_id),<?php digitopay_idempotency_key =<?php COALESCE(digitopay_idempotency_key,<?php :idempotency_key),<?php webhook_data =<?php :webhook_data,<?php updated_at =<?php NOW()<?php WHERE id =<?php :id <?php ");<?php <?php $updateResult =<?php $stmt->execute([<?php ':status'<?php =><?php $newStatus,<?php ':transaction_id'<?php =><?php $transactionId,<?php ':idempotency_key'<?php =><?php $idempotencyKey,<?php ':webhook_data'<?php =><?php $input,<?php ':id'<?php =><?php $saque['id']<?php ]);<?php <?php if (!$updateResult)<?php {<?php throw new Exception('Falha ao atualizar status do saque no banco');<?php }<?php <?php writeLog("Status updated:<?php {$saque['status']}<?php -><?php $newStatus for saque ID {$saque['id']}");<?php <?php //<?php Processar estorno se saque foi cancelado ou falhou <?php if (in_array($newStatus,<?php ['CANCELLED',<?php 'FAILED']))<?php {<?php writeLog("Processing refund for failed/cancelled withdrawal");<?php <?php //<?php Verificar se estorno já<?php foi processado <?php $stmt =<?php $pdo->prepare("<?php SELECT COUNT(*)<?php as count <?php FROM transacoes <?php WHERE tipo =<?php 'REFUND'<?php AND referencia =<?php :transaction_id <?php AND status =<?php 'COMPLETED'<?php ");<?php $stmt->execute([':transaction_id'<?php =><?php $transactionId]);<?php $jaEstornado =<?php $stmt->fetchColumn();<?php <?php if ($jaEstornado ==<?php 0)<?php {<?php //<?php Buscar saldo atual do usuário <?php $stmt =<?php $pdo->prepare("SELECT saldo FROM usuarios WHERE id =<?php :user_id FOR UPDATE");<?php $stmt->execute([':user_id'<?php =><?php $saque['user_id']]);<?php $saldoAtual =<?php $stmt->fetchColumn();<?php <?php if ($saldoAtual ===<?php false)<?php {<?php throw new Exception('Usuário não encontrado para estorno');<?php }<?php <?php //<?php Devolver valor para o usuário <?php $novoSaldo =<?php $saldoAtual +<?php $saque['valor'];<?php $stmt =<?php $pdo->prepare("<?php UPDATE usuarios <?php SET saldo =<?php :novo_saldo,<?php updated_at =<?php NOW()<?php WHERE id =<?php :user_id <?php ");<?php $stmt->execute([<?php ':novo_saldo'<?php =><?php $novoSaldo,<?php ':user_id'<?php =><?php $saque['user_id']<?php ]);<?php <?php //<?php Registrar transação de estorno <?php $stmt =<?php $pdo->prepare("<?php INSERT INTO transacoes (<?php user_id,<?php tipo,<?php valor,<?php saldo_anterior,<?php saldo_posterior,<?php status,<?php referencia,<?php gateway,<?php descricao,<?php created_at <?php )<?php VALUES (<?php :user_id,<?php 'REFUND',<?php :valor,<?php :saldo_anterior,<?php :saldo_posterior,<?php 'COMPLETED',<?php :referencia,<?php 'digitopay',<?php :descricao,<?php NOW()<?php )<?php ");<?php <?php $descricao =<?php 'Estorno automático -<?php Saque DigitoPay '<?php .<?php ($newStatus ===<?php 'CANCELLED'<?php ?<?php 'cancelado'<?php :<?php 'falhou')<?php .<?php '<?php -<?php '<?php .<?php $transactionId;<?php <?php $stmt->execute([<?php ':user_id'<?php =><?php $saque['user_id'],<?php ':valor'<?php =><?php $saque['valor'],<?php ':saldo_anterior'<?php =><?php $saldoAtual,<?php ':saldo_posterior'<?php =><?php $novoSaldo,<?php ':referencia'<?php =><?php $transactionId,<?php ':descricao'<?php =><?php $descricao <?php ]);<?php <?php writeLog("Refund processed:<?php R$<?php {$saque['valor']}<?php returned to user {$saque['user_id']}");<?php }<?php else {<?php writeLog("Refund already processed for transaction $transactionId");<?php }<?php }<?php <?php $pdo->commit();<?php writeLog("Transaction committed successfully");<?php <?php }<?php catch (Exception $e)<?php {<?php $pdo->rollback();<?php writeLog("Transaction rolled back:<?php "<?php .<?php $e->getMessage());<?php throw new Exception('Erro ao processar webhook:<?php '<?php .<?php $e->getMessage());<?php }<?php <?php //<?php Resposta de sucesso <?php $response =<?php [<?php 'status'<?php =><?php 'success',<?php 'message'<?php =><?php 'Webhook processado com sucesso',<?php 'transaction_id'<?php =><?php $transactionId,<?php 'saque_id'<?php =><?php $saque['id'],<?php 'old_status'<?php =><?php $saque['status'],<?php 'new_status'<?php =><?php $newStatus,<?php 'search_method'<?php =><?php $searchMethod,<?php 'timestamp'<?php =><?php date('Y-m-d H:i:s')<?php ];<?php <?php writeLog("SUCCESS:<?php "<?php .<?php json_encode($response));<?php echo json_encode($response);<?php }<?php catch (Exception $e)<?php {<?php http_response_code(400);<?php <?php $error =<?php [<?php 'status'<?php =><?php 'error',<?php 'message'<?php =><?php $e->getMessage(),<?php 'timestamp'<?php =><?php date('Y-m-d H:i:s')<?php ];<?php <?php writeLog("ERROR:<?php "<?php .<?php json_encode($error));<?php echo json_encode($error);<?php 
}<?php 
?>